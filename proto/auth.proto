syntax = "proto3";

package auth;

option go_package = "erp-api-gateway/proto/gen/auth";

import "google/protobuf/timestamp.proto";

// AuthService defines the authentication service
service AuthService {
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse);
  rpc RevokeToken(RevokeTokenRequest) returns (RevokeTokenResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
}

// Login request and response
message LoginRequest {
  string email = 1;
  string password = 2;
  bool remember_me = 3;
}

message LoginResponse {
  bool success = 1;
  string message = 2;
  AuthData data = 3;
  map<string, FieldErrors> errors = 4;
}

// Register request and response
message RegisterRequest {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  string password = 4;
  string password_confirmation = 5;
}

message RegisterResponse {
  bool success = 1;
  string message = 2;
  AuthData data = 3;
  map<string, FieldErrors> errors = 4;
}

// Refresh token request and response
message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  bool success = 1;
  string message = 2;
  TokenPair data = 3;
  map<string, FieldErrors> errors = 4;
}

// Validate token request and response
message ValidateTokenRequest {
  string token = 1;
}

message ValidateTokenResponse {
  bool valid = 1;
  UserClaims claims = 2;
  string error = 3;
}

// Revoke token request and response
message RevokeTokenRequest {
  string token = 1;
}

message RevokeTokenResponse {
  bool success = 1;
  string message = 2;
}

// Get user request and response
message GetUserRequest {
  string user_id = 1;
}

message GetUserResponse {
  bool success = 1;
  string message = 2;
  User data = 3;
  map<string, FieldErrors> errors = 4;
}

// Update user request and response
message UpdateUserRequest {
  string user_id = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
}

message UpdateUserResponse {
  bool success = 1;
  string message = 2;
  User data = 3;
  map<string, FieldErrors> errors = 4;
}

// Common data structures
message AuthData {
  User user = 1;
  string access_token = 2;
  string refresh_token = 3;
  int64 expires_in = 4;
}

message TokenPair {
  string access_token = 1;
  string refresh_token = 2;
  int64 expires_in = 3;
}

message User {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string email = 4;
  google.protobuf.Timestamp email_verified_at = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
  repeated string roles = 8;
  repeated string permissions = 9;
}

message UserClaims {
  string user_id = 1;
  string email = 2;
  repeated string roles = 3;
  repeated string permissions = 4;
  int64 expires_at = 5;
  int64 issued_at = 6;
  string subject = 7;
  string issuer = 8;
}

message FieldErrors {
  repeated string errors = 1;
}