syntax = "proto3";

package auth;

option go_package = "./auth";

import "google/protobuf/timestamp.proto";

// Auth service definition
service AuthService {
  // Authentication operations
  rpc Authenticate(AuthenticateRequest) returns (AuthenticateResponse);
  
  // Token operations
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
  rpc RevokeToken(RevokeTokenRequest) returns (RevokeTokenResponse);
  
  // User operations
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ActivateUser(ActivateUserRequest) returns (ActivateUserResponse);
  rpc DeactivateUser(DeactivateUserRequest) returns (DeactivateUserResponse);
  rpc VerifyUser(VerifyUserRequest) returns (VerifyUserResponse);
  rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse);
  
  // Role operations
  rpc ListRoles(ListRolesRequest) returns (ListRolesResponse);
  rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse);
  rpc UpdateRole(UpdateRoleRequest) returns (UpdateRoleResponse);
  rpc DeleteRole(DeleteRoleRequest) returns (DeleteRoleResponse);
  rpc AssignUserRole(AssignUserRoleRequest) returns (AssignUserRoleResponse);
  rpc RevokeUserRole(RevokeUserRoleRequest) returns (RevokeUserRoleResponse);
  
  // Permission operations
  rpc ListPermissions(ListPermissionsRequest) returns (ListPermissionsResponse);
  rpc AssignPermissions(AssignPermissionsRequest) returns (AssignPermissionsResponse);
  rpc CheckPermission(CheckPermissionRequest) returns (CheckPermissionResponse);
  
  // Statistics operations
  rpc GetUserStats(GetUserStatsRequest) returns (GetUserStatsResponse);
  rpc GetSecurityStats(GetSecurityStatsRequest) returns (GetSecurityStatsResponse);
  rpc GetUserActivity(GetUserActivityRequest) returns (GetUserActivityResponse);
  
  // Organization operations
  rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);
  rpc GetOrganization(GetOrganizationRequest) returns (GetOrganizationResponse);
  rpc ListOrganizations(ListOrganizationsRequest) returns (ListOrganizationsResponse);
  rpc GetOrganizationStats(GetOrganizationStatsRequest) returns (GetOrganizationStatsResponse);
  
  // Bulk operations
  rpc BulkCreateUsers(BulkCreateUsersRequest) returns (BulkCreateUsersResponse);
  rpc BulkUpdateUsers(BulkUpdateUsersRequest) returns (BulkUpdateUsersResponse);
  rpc BulkDeleteUsers(BulkDeleteUsersRequest) returns (BulkDeleteUsersResponse);
  rpc BulkCheckPermissions(BulkCheckPermissionsRequest) returns (BulkCheckPermissionsResponse);
  
  // Health check
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

// Token validation
message ValidateTokenRequest {
  string token = 1;
}

message ValidateTokenResponse {
  bool valid = 1;
  string user_id = 2;
  string organization_id = 3;
  string email = 4;
  google.protobuf.Timestamp expires_at = 5;
  string error = 6;
}

// Token refresh
message RefreshTokenRequest {
  string refresh_token = 1;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
  int32 expires_in = 3;
  string error = 4;
}

// Token revocation
message RevokeTokenRequest {
  string token = 1;
  string token_type = 2; // "access" or "refresh"
}

message RevokeTokenResponse {
  bool success = 1;
  string error = 2;
}

// User retrieval
message GetUserRequest {
  string user_id = 1;
}

message GetUserResponse {
  User user = 1;
  string error = 2;
}

// Permission check
message CheckPermissionRequest {
  string user_id = 1;
  string resource = 2;
  string action = 3;
}

message CheckPermissionResponse {
  bool has_permission = 1;
  string error = 2;
}

// Authentication
message AuthenticateRequest {
  string email = 1;
  string password = 2;
  string organization_domain = 3;
  string two_factor_code = 4;
  SecurityContext security_context = 5;
  bool remember_me = 6;
}

message AuthenticateResponse {
  bool success = 1;
  TokenPair tokens = 2;
  User user = 3;
  bool requires_two_fa = 4;
  string error = 5;
  repeated string warnings = 6;
}

message SecurityContext {
  string ip_address = 1;
  string user_agent = 2;
  string device_fingerprint = 3;
  string session_id = 4;
}

message TokenPair {
  string access_token = 1;
  string refresh_token = 2;
  google.protobuf.Timestamp expires_at = 3;
  google.protobuf.Timestamp refresh_expires_at = 4;
  string token_type = 5;
}

// Health check
message HealthCheckRequest {}

message HealthCheckResponse {
  string status = 1;
  string service = 2;
  google.protobuf.Timestamp timestamp = 3;
}

// Data models
message User {
  string id = 1;
  string organization_id = 2;
  string email = 3;
  string first_name = 4;
  string last_name = 5;
  bool is_active = 6;
  bool is_verified = 7;
  google.protobuf.Timestamp last_login_at = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
  Organization organization = 11;
}

message Organization {
  string id = 1;
  string name = 2;
  string domain = 3;
  bool is_active = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  repeated User users = 7;
  int32 user_count = 8;
  int32 active_user_count = 9;
  repeated Role roles = 10;
}

// User management messages
message CreateUserRequest {
  string organization_id = 1;
  string email = 2;
  string password = 3;
  string first_name = 4;
  string last_name = 5;
  bool is_active = 6;
  bool is_verified = 7;
  repeated string role_ids = 8;
  SecurityContext security_context = 9;
}

message CreateUserResponse {
  bool success = 1;
  User user = 2;
  string error = 3;
}

message UpdateUserRequest {
  string user_id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  bool is_active = 5;
  bool is_verified = 6;
  repeated string role_ids = 7;
  SecurityContext security_context = 8;
}

message UpdateUserResponse {
  bool success = 1;
  User user = 2;
  string error = 3;
}

message ChangePasswordRequest {
  string user_id = 1;
  string current_password = 2;
  string new_password = 3;
  SecurityContext security_context = 4;
}

message ChangePasswordResponse {
  bool success = 1;
  string error = 2;
}

// Organization management messages
message CreateOrganizationRequest {
  string name = 1;
  string domain = 2;
  OrganizationSettings settings = 3;
  string admin_email = 4;
  string admin_password = 5;
  string admin_first_name = 6;
  string admin_last_name = 7;
  SecurityContext security_context = 8;
}

message CreateOrganizationResponse {
  bool success = 1;
  Organization organization = 2;
  User admin_user = 3;
  TokenPair tokens = 4;
  string error = 5;
}

message GetOrganizationRequest {
  string organization_id = 1;
}

message GetOrganizationResponse {
  Organization organization = 1;
  string error = 2;
}

message ListOrganizationsRequest {
  int32 limit = 1;
  int32 offset = 2;
  string search = 3;
  string sort_by = 4;
  string sort_order = 5;
}

message ListOrganizationsResponse {
  bool success = 1;
  repeated Organization organizations = 2;
  int32 total_count = 3;
  bool has_next_page = 4;
  string error = 5;
}

message GetOrganizationStatsRequest {
}

message GetOrganizationStatsResponse {
  bool success = 1;
  OrganizationStats stats = 2;
  string error = 3;
}

message OrganizationStats {
  int32 total_organizations = 1;
  int32 active_organizations = 2;
  int32 inactive_organizations = 3;
  int32 verified_organizations = 4;
  int32 unverified_organizations = 5;
  int32 total_users = 6;
  float average_users_per_org = 7;
}

message OrganizationSettings {
  string timezone = 1;
  string date_format = 2;
  string currency = 3;
  string language = 4;
  bool two_factor_enabled = 5;
  int32 session_timeout = 6;
  map<string, string> custom_fields = 7;
}

// Bulk operation messages
message BulkCreateUsersRequest {
  string organization_id = 1;
  repeated CreateUserData users = 2;
  SecurityContext security_context = 3;
}

message CreateUserData {
  string email = 1;
  string password = 2;
  string first_name = 3;
  string last_name = 4;
  bool is_active = 5;
  bool is_verified = 6;
  repeated string role_ids = 7;
}

message BulkCreateUsersResponse {
  bool success = 1;
  repeated BulkUserResult results = 2;
  int32 created_count = 3;
  int32 failed_count = 4;
  string error = 5;
}

message BulkUserResult {
  bool success = 1;
  User user = 2;
  string error = 3;
  string email = 4; // For identification in case of error
}

message BulkUpdateUsersRequest {
  repeated UpdateUserData users = 1;
  SecurityContext security_context = 2;
}

message UpdateUserData {
  string user_id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  bool is_active = 5;
  bool is_verified = 6;
  repeated string role_ids = 7;
}

message BulkUpdateUsersResponse {
  bool success = 1;
  repeated BulkUserResult results = 2;
  int32 updated_count = 3;
  int32 failed_count = 4;
  string error = 5;
}

message BulkCheckPermissionsRequest {
  repeated PermissionCheck checks = 1;
}

message PermissionCheck {
  string user_id = 1;
  string resource = 2;
  string action = 3;
  string scope = 4;
}

message BulkCheckPermissionsResponse {
  bool success = 1;
  repeated PermissionResult results = 2;
  string error = 3;
}

message PermissionResult {
  bool has_permission = 1;
  string user_id = 2;
  string resource = 3;
  string action = 4;
  string scope = 5;
  string error = 6;
}

// User listing
message ListUsersRequest {
  string organization_id = 1;
  int32 limit = 2;
  int32 offset = 3;
  string search = 4;
  string sort_by = 5;
  string sort_order = 6;
}

message ListUsersResponse {
  bool success = 1;
  repeated User users = 2;
  int32 total_count = 3;
  bool has_next_page = 4;
  string error = 5;
}

// User deletion
message DeleteUserRequest {
  string user_id = 1;
  SecurityContext security_context = 2;
}

message DeleteUserResponse {
  bool success = 1;
  string error = 2;
}

// User activation/deactivation
message ActivateUserRequest {
  string user_id = 1;
  SecurityContext security_context = 2;
}

message ActivateUserResponse {
  bool success = 1;
  User user = 2;
  string error = 3;
}

message DeactivateUserRequest {
  string user_id = 1;
  SecurityContext security_context = 2;
}

message DeactivateUserResponse {
  bool success = 1;
  User user = 2;
  string error = 3;
}

// User verification
message VerifyUserRequest {
  string user_id = 1;
  SecurityContext security_context = 2;
}

message VerifyUserResponse {
  bool success = 1;
  User user = 2;
  string error = 3;
}

// Role management
message ListRolesRequest {
  string organization_id = 1;
}

message ListRolesResponse {
  bool success = 1;
  repeated Role roles = 2;
  string error = 3;
}

message CreateRoleRequest {
  string organization_id = 1;
  string name = 2;
  string description = 3;
  repeated string permission_ids = 4;
  SecurityContext security_context = 5;
}

message CreateRoleResponse {
  bool success = 1;
  Role role = 2;
  string error = 3;
}

message UpdateRoleRequest {
  string role_id = 1;
  string name = 2;
  string description = 3;
  repeated string permission_ids = 4;
  SecurityContext security_context = 5;
}

message UpdateRoleResponse {
  bool success = 1;
  Role role = 2;
  string error = 3;
}

message DeleteRoleRequest {
  string role_id = 1;
  SecurityContext security_context = 2;
}

message DeleteRoleResponse {
  bool success = 1;
  string error = 2;
}

// User role assignment
message AssignUserRoleRequest {
  string user_id = 1;
  string role_id = 2;
  SecurityContext security_context = 3;
}

message AssignUserRoleResponse {
  bool success = 1;
  string error = 2;
}

message RevokeUserRoleRequest {
  string user_id = 1;
  string role_id = 2;
  SecurityContext security_context = 3;
}

message RevokeUserRoleResponse {
  bool success = 1;
  string error = 2;
}

// Permission management
message ListPermissionsRequest {}

message ListPermissionsResponse {
  bool success = 1;
  repeated Permission permissions = 2;
  string error = 3;
}

message AssignPermissionsRequest {
  string role_id = 1;
  repeated string permission_ids = 2;
  SecurityContext security_context = 3;
}

message AssignPermissionsResponse {
  bool success = 1;
  string error = 2;
}

// Statistics
message GetUserStatsRequest {
  string organization_id = 1;
}

message GetUserStatsResponse {
  bool success = 1;
  UserStats stats = 2;
  string error = 3;
}

message GetSecurityStatsRequest {
  string organization_id = 1;
}

message GetSecurityStatsResponse {
  bool success = 1;
  SecurityStats stats = 2;
  string error = 3;
}

// User activity
message GetUserActivityRequest {
  string user_id = 1;
  string organization_id = 2;
  int32 limit = 3;
  int32 offset = 4;
}

message GetUserActivityResponse {
  bool success = 1;
  repeated UserActivity activities = 2;
  int32 total_count = 3;
  string error = 4;
}

// Bulk delete users
message BulkDeleteUsersRequest {
  repeated string user_ids = 1;
  SecurityContext security_context = 2;
}

message BulkDeleteUsersResponse {
  bool success = 1;
  int32 deleted_count = 2;
  int32 failed_count = 3;
  repeated BulkDeleteResult results = 4;
  string error = 5;
}

message BulkDeleteResult {
  bool success = 1;
  string user_id = 2;
  string error = 3;
}

// Additional data models
message Role {
  string id = 1;
  string organization_id = 2;
  string name = 3;
  string description = 4;
  bool is_system = 5;
  bool is_active = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
  repeated Permission permissions = 9;
}

message Permission {
  string id = 1;
  string name = 2;
  string resource = 3;
  string action = 4;
  string scope = 5;
  string description = 6;
  bool is_system = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
}

message UserStats {
  int32 total_users = 1;
  int32 active_users = 2;
  int32 inactive_users = 3;
  int32 verified_users = 4;
  int32 unverified_users = 5;
  int32 recent_signups = 6;
  int32 recent_logins = 7;
}

message SecurityStats {
  int32 failed_logins_today = 1;
  int32 locked_accounts = 2;
  int32 security_alerts = 3;
  int32 two_factor_enabled = 4;
  int32 password_resets_today = 5;
}

message UserActivity {
  string id = 1;
  string user_id = 2;
  string action = 3;
  string resource = 4;
  string details = 5;
  string ip_address = 6;
  string user_agent = 7;
  google.protobuf.Timestamp created_at = 8;
  User user = 9;
}