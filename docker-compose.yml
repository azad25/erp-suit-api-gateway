version: '3.8'

services:
  erp-django-core:
    build: .
    container_name: erp-django-core
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=erp_core
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redispassword
      - AUTH_SERVICE_URL=http://auth-service:8080
      - AUTH_SERVICE_GRPC_HOST=auth-service
      - AUTH_SERVICE_GRPC_PORT=50051
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - postgres
      - redis
      - auth-service
    networks:
      - erp-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: erp-postgres-core
    environment:
      POSTGRES_DB: erp_core
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - erp-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: erp-redis-core
    command: redis-server --appendonly yes --requirepass redispassword
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - erp-network
    restart: unless-stopped

  auth-service:
    image: erp-auth-service:latest
    container_name: erp-auth-service
    ports:
      - "8080:8080"
      - "50051:50051"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=erp_auth
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redispassword
    depends_on:
      - postgres
      - redis
    networks:
      - erp-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  erp-network:
    driver: bridge 